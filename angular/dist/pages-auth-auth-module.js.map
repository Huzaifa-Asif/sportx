{"version":3,"sources":["webpack:///./src/app/pages/auth/auth-routing.module.ts","webpack:///./src/app/pages/auth/auth.module.ts","webpack:///./src/app/pages/auth/login/login.component.html","webpack:///./src/app/pages/auth/login/login.component.scss","webpack:///./src/app/pages/auth/login/login.component.ts"],"names":[],"mappings":"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","file":"pages-auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AuthModule { }\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <!--login page start-->\\n  <div class=\\\"authentication-main\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4 p-0\\\">\\n        <div class=\\\"auth-innerleft\\\">\\n          <div class=\\\"text-center\\\">\\n            <img src=\\\"assets/images/logo-login.png\\\" class=\\\"logo-login\\\" alt=\\\"\\\">\\n            <hr>\\n            <div class=\\\"social-media\\\">\\n              <ul class=\\\"list-inline\\\">\\n                <li class=\\\"list-inline-item\\\"><i class=\\\"fa fa-facebook txt-fb\\\" aria-hidden=\\\"true\\\"></i></li>\\n                <li class=\\\"list-inline-item\\\"><i class=\\\"fa fa-google-plus txt-google-plus\\\" aria-hidden=\\\"true\\\"></i></li>\\n                <li class=\\\"list-inline-item\\\"><i class=\\\"fa fa-twitter txt-twitter\\\" aria-hidden=\\\"true\\\"></i></li>\\n                <li class=\\\"list-inline-item\\\"><i class=\\\"fa fa-linkedin txt-linkedin\\\" aria-hidden=\\\"true\\\"></i></li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-8 p-0\\\">\\n        <div class=\\\"auth-innerright\\\">\\n          <div class=\\\"authentication-box\\\">\\n            <h4>LOGIN</h4>\\n            <h6>Enter your Email and Password</h6>\\n            <div class=\\\"card mt-4 p-4 mb-0\\\">\\n              <form class=\\\"theme-form\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form)\\\" autocomplete=\\\"false\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-form-label pt-0\\\">Email</label>\\n                  <input type=\\\"text\\\" name=\\\"email\\\" ngModel class=\\\"form-control form-control-lg\\\" required>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-form-label\\\">Password</label>\\n                  <input type=\\\"password\\\" name=\\\"password\\\" ngModel class=\\\"form-control form-control-lg\\\" required>\\n                </div>\\n                <!-- <div class=\\\"checkbox p-0\\\">\\n                  <input id=\\\"checkbox1\\\" type=\\\"checkbox\\\">\\n                  <label for=\\\"checkbox1\\\">Remember me</label>\\n                </div> -->\\n                <div class=\\\"form-group form-row mt-3 mb-0\\\">\\n                  <div class=\\\"col-md-3\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" [disabled]=\\\"isSubmitted\\\">LOGIN</button>\\n                  </div>\\n                </div>\\n              </form>\\n\\n              <!-- Loader -->\\n              <div *ngIf=\\\"isSubmitted\\\" class=\\\"loader-box\\\">\\n                <div class=\\\"loader\\\">\\n                  <div class=\\\"line\\\"></div>\\n                  <div class=\\\"line\\\"></div>\\n                  <div class=\\\"line\\\"></div>\\n                  <div class=\\\"line\\\"></div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!--login page end-->\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { HelperService } from '../../../services/helper/helper.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  isSubmitted = false;\n\n  constructor(private auth: AuthService, private router: Router, private helper: HelperService) {\n    if (this.auth.isLoggedIn) {\n      this.router.navigateByUrl('dashboard/cashier');\n    }\n  }\n  ngOnInit() {\n  }\n\n  onSubmit(form: NgModel) {\n    // console.log(form.value);\n\n    if (form.valid) {\n\n      this.isSubmitted = true;\n\n      this.auth.login(form.value).then((data: any) => {\n\n        this.isSubmitted = false;\n\n        // console.log(data);\n\n        if (data === 'open') {\n          this.helper.successToast('Welcome ' + this.auth.user.email, 'Successfully Authenticated!');\n\n          console.log('role', this.auth.user.role);\n\n          if (this.auth.user.role === 0) {\n            this.router.navigateByUrl('dashboard/admin');\n          } else if (this.auth.user.role === 1) {\n            this.router.navigateByUrl('dashboard/cashier');\n          } else {\n            this.helper.infoToast('Invalid User', 'Contact Administrator!');\n          }\n\n        } else if (data === 'locked') {\n\n          this.helper.failureBigToast('Failed!', 'Your account is locked, kindly contact administrator.');\n\n        } else {\n          this.helper.failureBigToast('Failed!', 'Incorrect username or password.');\n          // this.helper.failureToast('Incorrect username or password', 'Authentication Failed!');\n        }\n\n      });\n    }\n  }\n\n}\n"],"sourceRoot":""}